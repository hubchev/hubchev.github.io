---
title: "Solutions to the Exercises"
author: "Stephan.Huber@hs-fresenius.de"
date: today
date-format: long

abstract: |
  This document contains the solutions to the exercises of the lecture notes found  [here](https://hubchev.github.io/ds/). 
  
format:
  html:
    toc: true
    embed-resources: true
    self-contained-math: true
    number-sections: true
  pdf:
    documentclass: scrartcl
    papersize: a4paper
    number-sections: true
---

```{r include=FALSE}
if (!require(pacman)) install.packages("pacman")
pacman::p_unload(all)
```


# Links to R scripts

- [exe_duplicates.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_duplicates.R)
- [exe_import_covid.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_import_covid.R)
- [exe_genanddrop.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_genanddrop.R)
- [exe_base_pipe.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_base_pipe.R)
- [exe_subset.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_subset.R)
- [exe_data_transformation.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_data_transformation.R)
- [exe_poser.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_poser.R)
- [exe_datasauRus.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_datasauRus.R)
- [exe_convergence.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_convergence.R)
- [exe_un_gdp_ger_fra.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_un_gdp_ger_fra.R)
- [exe_hortacsu_figure_3.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_hortacsu_figure_3.R) 
- [exe_regress_lecture.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_regress_lecture.R)
- [exe_calories.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_calories.R)
- [exe_bundesliga.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_bundesliga.R)
- [exe_okun_solution.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_okun_solution.R)
- [exe_zipf_solution.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_zipf_solution.R)

# Output of the solutions

## exe_duplicates.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_duplicates.R"}
```


## exe_import_covid.R

```{r, file = "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_import_covid.R"}
```


## exe_genanddrop.R

```{r, file = "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_genanddrop.R"}
```

## exe_base_pipe.R

```{r, file = "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_base_pipe.R"}
```

## exe_subset.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_subset.R"}
```

## exe_poser.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_poser.R"}
```

## exe_datasauRus.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_datasauRus.R"}
```

## exe_convergence.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_convergence.R"}
```

## exe_un_gdp_ger_fra.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_un_gdp_ger_fra.R"}
```

## exe_hortacsu_figure_3.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_hortacsu_figure_3.R"}
```

## exe_regress_lecture.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_regress_lecture.R"}
```

## exe_calories.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_calories.R"}
```

## exe_bundesliga.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_bundesliga.R"}
```

## exe_okun_solution.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_okun_solution.R"}
```

## exe_zipf_solution.R

```{r, file =   "https://raw.githubusercontent.com/hubchev/courses/main/scr/exe_zipf_solution.R"}
```




```{r, echo=FALSE, eval=TRUE}
# Define source and destination paths
source_files <- c("exe_solutions.qmd", "exe_soutions.html")
destination_folder <- "/home/sthu/Dropbox/hsf/github/courses/rmd/"

# Copy files to the destination folder
file.copy(source_files, destination_folder, overwrite = TRUE)

# Print a message indicating the successful copy
cat("Files copied to", destination_folder, "\n")

```



<!-- ```{r} -->
<!-- # Define the directory where files and directories are to be deleted -->
<!-- target_directory <- "/home/sthu/Dropbox/hsf/courses/ds/solutions/" -->

<!-- # Get all files and directories in the target directory -->
<!-- all_files_and_dirs <- list.files(path = target_directory, full.names = TRUE) -->

<!-- # Define the files to keep -->
<!-- files_to_keep <- c("exe_solutions.qmd", "exe_solutions.pdf", "exe_solutions.html") -->
<!-- files_to_keep <- sapply(files_to_keep, function(x) file.path(target_directory, x)) -->

<!-- # Exclude the files to keep from the list of all files and directories -->
<!-- files_and_dirs_to_delete <- setdiff(all_files_and_dirs, files_to_keep) -->

<!-- # Delete files and directories except the ones to keep -->
<!-- for (item in files_and_dirs_to_delete) { -->
<!--   if (file.exists(item)) { -->
<!--     if (file.info(item)$isdir) { -->
<!--       # If item is a directory, use unlink() with recursive = TRUE to delete -->
<!--       unlink(item, recursive = TRUE) -->
<!--     } else { -->
<!--       # If item is a file, use file.remove() to delete -->
<!--       file.remove(item) -->
<!--     } -->
<!--   } -->
<!-- } -->
<!-- ``` -->



